package com.dilaraceylan.soccergame.entities.concrete;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user",
       uniqueConstraints = {@UniqueConstraint(columnNames = "email"),
                            @UniqueConstraint(columnNames = "username")})
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class User {

    @Id
    @GeneratedValue(generator = "native")
    @GenericGenerator(name = "native", strategy = "native")
    @Column(name = "id", unique = true, nullable = false)
    private Long id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "role_id", nullable = false, insertable = false, updatable = false)
    private Role role;

    @Column(name = "role_id")
    private Long roleId;
    
    @NotBlank
    @Size(max = 50, message = "Username can contain up to the 50 characters")
    @Column(name = "username", unique = true, nullable = false, length = 50)
    private String username;

    @NotBlank
    @Size(max = 50, message = "Email can contain up to the 50 characters")
    @Email
    @Column(name = "email", unique = true, nullable = false, length = 50)
    private String email;

    @NotBlank
    @Size(max = 200, message = "Password can contain up to the 200 characters")
    @Column(name = "password", nullable = false, length = 200)
    private String password;

    public User(String username, String email, String password) {
        super();
        this.username = username;
        this.email = email;
        this.password = password;
    }

    public User(Long roleId,
                @NotBlank @Size(max = 50,
                                message = "Username can contain up to the 50 characters") String username,
                @NotBlank @Size(max = 50,
                                message = "Email can contain up to the 50 characters") @Email String email,
                @NotBlank @Size(max = 200,
                                message = "Password can contain up to the 200 characters") String password) {
        super();
        this.roleId = roleId;
        this.username = username;
        this.email = email;
        this.password = password;
    }
}
